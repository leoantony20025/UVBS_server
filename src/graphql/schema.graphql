### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Asset {
  createdAt: DateTime
  id: String
  isPaymentOnline: Boolean
  themeDescription: String
  themePhoto: String
  themeTitle: String
  updatedAt: DateTime
  upi: String
}

type Audio {
  audioUrl: String
  createdAt: DateTime
  description: String
  id: String
  language: String
  song: Boolean
  thumbnail: String
  title: String
  updatedAt: DateTime
}

type Cart {
  createdAt: DateTime
  id: String
  price: Int
  products: [CartProduct]
  updatedAt: DateTime
  user: User
  userId: String
}

type CartProduct {
  cart: Cart
  cartId: String
  createdAt: DateTime
  id: String
  product: Product
  productId: String
  quantity: Int
  updatedAt: DateTime
  user: User
  userId: String
}

type Comment {
  createdAt: DateTime
  id: String
  msg: String
  updatedAt: DateTime
  user: User
  userId: String
  video: Video
  videoId: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Like {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  user: User
  userId: String
  video: Video
  videoId: String
}

type Mutation {
  addAsset(themeDescription: String!, themePhoto: String!, themeTitle: String!): [Asset]
  addAudio(audioUrl: String!, description: String!, language: String!, song: Boolean!, thumbnail: String!, title: String!): [Audio]
  addComment(msg: String!, userId: String!, videoId: String!): [Video]
  addLike(userId: String!, videoId: String!): [Video]
  addPreviousVideo(thumbnail: String!, title: String!, url: String!, year: Int!): [PreviousVideo]
  addProduct(description: String!, name: String!, photo: String!, price: Int!, stock: Int!): [Product]
  addToCartProduct(cartId: String!, productId: String!, quantity: Int!, userId: String!): User
  addVideo(description: String!, thumbnail: String!, title: String!, videoUrl: String!): [Video]
  createCODOrder(city: String!, country: String!, line1: String!, line2: String!, price: Int!, products: String!, state: String!, userId: String!, zip: Int!): User
  createCart(userId: String!): Cart
  createRPOrder(city: String!, country: String!, line1: String!, line2: String!, price: Int!, products: String!, razorpay_order_id: String!, razorpay_payment_id: String!, razorpay_signature: String!, razorpay_temp_order_id: String!, state: String!, userId: String!, zip: Int!): User
  deleteAsset(id: String!): [Asset]
  deleteAudio(id: String!): [Audio]
  deletePreviousVideo(id: String!): [PreviousVideo]
  deleteProduct(id: String!): [Product]
  deleteUser(id: String!): User
  deleteVideo(id: String!): [Video]
  generateRPOrderId(price: Int!): RPOrder
  generateStripePaymentIndent(price: Int!): StripePI
  login(email: String!, password: String!): User
  removeAllLikes: [Video]
  removeFromCartProduct(cartProductId: String!, userId: String!): User
  removeLike(userId: String!, videoId: String!): [Video]
  signup(email: String!, name: String!, password: String!, phone: String!): User
  updateAsset(id: String!, themeDescription: String!, themePhoto: String!, themeTitle: String!): [Asset]
  updateAudio(audioUrl: String!, description: String!, id: String!, language: String!, song: Boolean!, thumbnail: String!, title: String!): [Audio]
  updateIsPaymentOnline(id: String!, isPaymentOnline: String!): [Asset]
  updatePreviousVideo(id: String!, thumbnail: String!, title: String!, url: String!, year: Int!): [PreviousVideo]
  updateProduct(description: String!, id: String!, name: String!, photo: String!, price: Int!, stock: Int!): [Product]
  updateUPI(id: String!, upi: String!): [Asset]
  updateUser(email: String!, id: String!, name: String!, password: String!, phone: String!): User
  updateUserPaymentConfirmation(id: String!, isPaid: Boolean!): User
  updateUserSubscription(id: String!, isSubscribed: Boolean!, pid: String!): User
  updateVideo(description: String!, id: String!, thumbnail: String!, title: String!, videoUrl: String!): [Video]
  upsertShipping(city: String!, country: String!, line1: String!, line2: String!, state: String!, userId: String!, zip: Int!): User
}

type Order {
  city: String
  country: String
  createdAt: DateTime
  deliveryDate: DateTime
  id: String
  line1: String
  line2: String
  payment_mode: String
  payment_status: String
  price: Int
  products: String
  razorpay_order_id: String
  razorpay_payment_id: String
  razorpay_signature: String
  razorpay_temp_order_id: String
  state: String
  status: String
  updatedAt: DateTime
  user: User
  zip: Int
}

type OrderProduct {
  createdAt: DateTime
  id: String
  order: Order
  orderId: String
  product: Product
  productId: String
  quantity: Int
  updatedAt: DateTime
  user: User
  userId: String
}

type PreviousVideo {
  createdAt: DateTime
  id: String
  thumbnail: String
  title: String
  updatedAt: DateTime
  url: String
  year: Int
}

type Product {
  createdAt: DateTime
  description: String
  id: String
  name: String
  photo: String
  price: Int
  stock: Int
  updatedAt: DateTime
}

type Query {
  allAssets: [Asset]
  allAudios: [Audio]
  allCartProducts: [CartProduct]
  allCarts: [Cart]
  allComments: [Comment]
  allLikes: [Like]
  allOrders: [Order]
  allPreviousVideos: [PreviousVideo]
  allProducts: [Product]
  allShipping: [Shipping]
  allUsers: [User]
  allVideos: [Video]
}

type RPOrder {
  amount: Int
  amount_due: Int
  amount_paid: Int
  attempts: Int
  created_at: DateTime
  currency: String
  entity: String
  id: String
  offer_id: String
  receipt: String
  status: String
}

type Shipping {
  city: String
  country: String
  createdAt: DateTime
  id: String
  line1: String
  line2: String
  state: String
  updatedAt: DateTime
  user: User
  zip: Int
}

type StripePI {
  client_secret: String
  id: String
}

type User {
  cart: Cart
  createdAt: DateTime
  email: String
  id: String
  isActive: Boolean
  isPaid: Boolean
  isSubscribed: Boolean
  name: String
  orders: [Order]
  password: String
  phone: String
  pid: String
  shipping: Shipping
  updatedAt: DateTime
}

type Video {
  comments: [Comment]
  createdAt: DateTime
  description: String
  id: String
  likes: [Like]
  likesCount: Int
  theme: String
  thumbnail: String
  title: String
  updatedAt: DateTime
  videoUrl: String
}